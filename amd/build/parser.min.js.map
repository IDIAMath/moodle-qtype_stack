{"version":3,"file":"parser.min.js","sources":["../src/parser.js"],"sourcesContent":["/*!\n Based on ndef.parser, by Raphael Graf(r@undefined.ch)\n http://www.undefined.ch/mparser/index.html\n\n Ported to JavaScript and modified by Matthew Crumley (email@matthewcrumley.com, http://silentmatt.com/)\n\n You are free to use and modify this code in anyway you find useful. Please leave this comment in the code\n to acknowledge its original source. If you feel like it, I enjoy hearing about projects that use my code,\n but don't feel like you have to let me know or ask permission.\n*/\n\n//  Added by stlsmiths 6/13/2011\n//  re-define Array.indexOf, because IE doesn't know it ...\n//\n//  from http://stellapower.net/content/javascript-support-and-arrayindexof-ie\n\tif (!Array.indexOf) {\n\t\tArray.prototype.indexOf = function (obj, start) {\n\t\t\tfor (var i = (start || 0); i < this.length; i++) {\n\t\t\t\tif (this[i] === obj) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t}\n\nvar Parser = (function (scope) {\n\tfunction object(o) {\n\t\tfunction F() {}\n\t\tF.prototype = o;\n\t\treturn new F();\n\t}\n\n\tvar TNUMBER = 0;\n\tvar TOP1 = 1;\n\tvar TOP2 = 2;\n\tvar TVAR = 3;\n\tvar TFUNCALL = 4;\n\n\tfunction Token(type_, index_, prio_, number_) {\n\t\tthis.type_ = type_;\n\t\tthis.index_ = index_ || 0;\n\t\tthis.prio_ = prio_ || 0;\n\t\tthis.number_ = (number_ !== undefined && number_ !== null) ? number_ : 0;\n\t\tthis.toString = function () {\n\t\t\tswitch (this.type_) {\n\t\t\tcase TNUMBER:\n\t\t\t\treturn this.number_;\n\t\t\tcase TOP1:\n\t\t\tcase TOP2:\n\t\t\tcase TVAR:\n\t\t\t\treturn this.index_;\n\t\t\tcase TFUNCALL:\n\t\t\t\treturn \"CALL\";\n\t\t\tdefault:\n\t\t\t\treturn \"Invalid Token\";\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction Expression(tokens, ops1, ops2, functions) {\n\t\tthis.tokens = tokens;\n\t\tthis.ops1 = ops1;\n\t\tthis.ops2 = ops2;\n\t\tthis.functions = functions;\n\t}\n\n\t// Based on http://www.json.org/json2.js\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\'\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            \"'\" : \"\\\\'\",\n            '\\\\': '\\\\\\\\'\n        };\n\n\tfunction escapeValue(v) {\n\t\tif (typeof v === \"string\") {\n\t\t\tescapable.lastIndex = 0;\n\t        return escapable.test(v) ?\n\t            \"'\" + v.replace(escapable, function (a) {\n\t                var c = meta[a];\n\t                return typeof c === 'string' ? c :\n\t                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n\t            }) + \"'\" :\n\t            \"'\" + v + \"'\";\n\t\t}\n\t\treturn v;\n\t}\n\n\tfunction hasValue(values, index) {\n\t\tvar parts = index.split(/\\./);\n\t\tvar value = values;\n\t\tvar part;\n\t\twhile (part = parts.shift()) {\n\t\t\tif (!(part in value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvalue = value[part];\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction getValue(values, index) {\n\t\tvar parts = index.split(/\\./);\n\t\tvar value = values;\n\t\tvar part;\n\t\twhile (part = parts.shift()) {\n\t\t\tvalue = value[part];\n\t\t}\n\t\treturn value;\n\t}\n\n\tExpression.prototype = {\n\t\tsimplify: function (values) {\n\t\t\tvalues = values || {};\n\t\t\tvar nstack = [];\n\t\t\tvar newexpression = [];\n\t\t\tvar n1;\n\t\t\tvar n2;\n\t\t\tvar f;\n\t\t\tvar L = this.tokens.length;\n\t\t\tvar item;\n\t\t\tvar i = 0;\n\t\t\tfor (i = 0; i < L; i++) {\n\t\t\t\titem = this.tokens[i];\n\t\t\t\tvar type_ = item.type_;\n\t\t\t\tif (type_ === TNUMBER) {\n\t\t\t\t\tnstack.push(item);\n\t\t\t\t}\n\t\t\t\telse if (type_ === TVAR && hasValue(values, item.index_)) {\n\t\t\t\t\titem = new Token(TNUMBER, 0, 0, getValue(values, item.index_));\n\t\t\t\t\tnstack.push(item);\n\t\t\t\t}\n\t\t\t\telse if (type_ === TOP2 && nstack.length > 1) {\n\t\t\t\t\tn2 = nstack.pop();\n\t\t\t\t\tn1 = nstack.pop();\n\t\t\t\t\tf = this.ops2[item.index_];\n\t\t\t\t\titem = new Token(TNUMBER, 0, 0, f(n1.number_, n2.number_));\n\t\t\t\t\tnstack.push(item);\n\t\t\t\t}\n\t\t\t\telse if (type_ === TOP1 && nstack.length > 0) {\n\t\t\t\t\tn1 = nstack.pop();\n\t\t\t\t\tf = this.ops1[item.index_];\n\t\t\t\t\titem = new Token(TNUMBER, 0, 0, f(n1.number_));\n\t\t\t\t\tnstack.push(item);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twhile (nstack.length > 0) {\n\t\t\t\t\t\tnewexpression.push(nstack.shift());\n\t\t\t\t\t}\n\t\t\t\t\tnewexpression.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (nstack.length > 0) {\n\t\t\t\tnewexpression.push(nstack.shift());\n\t\t\t}\n\n\t\t\treturn new Expression(newexpression, object(this.ops1), object(this.ops2), object(this.functions));\n\t\t},\n\n\t\tsubstitute: function (variable, expr) {\n\t\t\tif (!(expr instanceof Expression)) {\n\t\t\t\texpr = new Parser().parse(String(expr));\n\t\t\t}\n\t\t\tvar newexpression = [];\n\t\t\tvar L = this.tokens.length;\n\t\t\tvar item;\n\t\t\tvar i = 0;\n\t\t\tfor (i = 0; i < L; i++) {\n\t\t\t\titem = this.tokens[i];\n\t\t\t\tvar type_ = item.type_;\n\t\t\t\tif (type_ === TVAR && item.index_ === variable) {\n\t\t\t\t\tfor (var j = 0; j < expr.tokens.length; j++) {\n\t\t\t\t\t\tvar expritem = expr.tokens[j];\n\t\t\t\t\t\tvar replitem = new Token(expritem.type_, expritem.index_, expritem.prio_, expritem.number_);\n\t\t\t\t\t\tnewexpression.push(replitem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewexpression.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ret = new Expression(newexpression, object(this.ops1), object(this.ops2), object(this.functions));\n\t\t\treturn ret;\n\t\t},\n\n\t\tevaluate: function (values) {\n\t\t\tvalues = values || {};\n\t\t\tvar nstack = [];\n\t\t\tvar n1;\n\t\t\tvar n2;\n\t\t\tvar f;\n\t\t\tvar L = this.tokens.length;\n\t\t\tvar item;\n\t\t\tvar i = 0;\n\t\t\tfor (i = 0; i < L; i++) {\n\t\t\t\titem = this.tokens[i];\n\t\t\t\tvar type_ = item.type_;\n\t\t\t\tif (type_ === TNUMBER) {\n\t\t\t\t\tnstack.push(item.number_);\n\t\t\t\t}\n\t\t\t\telse if (type_ === TOP2) {\n\t\t\t\t\tn2 = nstack.pop();\n\t\t\t\t\tn1 = nstack.pop();\n\t\t\t\t\tf = this.ops2[item.index_];\n\t\t\t\t\tnstack.push(f(n1, n2));\n\t\t\t\t}\n\t\t\t\telse if (type_ === TVAR) {\n\t\t\t\t\tif (hasValue(values, item.index_)) {\n\t\t\t\t\t\tnstack.push(getValue(values, item.index_));\n\t\t\t\t\t}\n\t\t\t\t\telse if (hasValue(this.functions, item.index_)) {\n\t\t\t\t\t\tnstack.push(getValue(this.functions, item.index_));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow new Error(\"undefined variable: \" + item.index_);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (type_ === TOP1) {\n\t\t\t\t\tn1 = nstack.pop();\n\t\t\t\t\tf = this.ops1[item.index_];\n\t\t\t\t\tnstack.push(f(n1));\n\t\t\t\t}\n\t\t\t\telse if (type_ === TFUNCALL) {\n\t\t\t\t\tn1 = nstack.pop();\n\t\t\t\t\tf = nstack.pop();\n\t\t\t\t\tif (f.apply && f.call) {\n\t\t\t\t\t\tif (Object.prototype.toString.call(n1) == \"[object Array]\") {\n\t\t\t\t\t\t\tnstack.push(f.apply(undefined, n1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnstack.push(f.call(undefined, n1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow new Error(f + \" is not a function\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error(\"invalid Expression\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nstack.length > 1) {\n\t\t\t\tthrow new Error(\"invalid Expression (parity)\");\n\t\t\t}\n\t\t\treturn nstack[0];\n\t\t},\n\n\t\ttoString: function (toJS) {\n\t\t\tvar nstack = [];\n\t\t\tvar n1;\n\t\t\tvar n2;\n\t\t\tvar f;\n\t\t\tvar L = this.tokens.length;\n\t\t\tvar item;\n\t\t\tvar i = 0;\n\t\t\tfor (i = 0; i < L; i++) {\n\t\t\t\titem = this.tokens[i];\n\t\t\t\tvar type_ = item.type_;\n\t\t\t\tif (type_ === TNUMBER) {\n\t\t\t\t\tnstack.push(escapeValue(item.number_));\n\t\t\t\t}\n\t\t\t\telse if (type_ === TOP2) {\n\t\t\t\t\tn2 = nstack.pop();\n\t\t\t\t\tn1 = nstack.pop();\n\t\t\t\t\tf = item.index_;\n\t\t\t\t\tif (toJS && f == \"^\") {\n\t\t\t\t\t\tnstack.push(\"Math.pow(\" + n1 + \",\" + n2 + \")\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnstack.push(\"(\" + n1 + f + n2 + \")\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (type_ === TVAR) {\n\t\t\t\t\tnstack.push(item.index_);\n\t\t\t\t}\n\t\t\t\telse if (type_ === TOP1) {\n\t\t\t\t\tn1 = nstack.pop();\n\t\t\t\t\tf = item.index_;\n\t\t\t\t\tif (f === \"-\") {\n\t\t\t\t\t\tnstack.push(\"(\" + f + n1 + \")\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnstack.push(f + \"(\" + n1 + \")\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (type_ === TFUNCALL) {\n\t\t\t\t\tn1 = nstack.pop();\n\t\t\t\t\tf = nstack.pop();\n\t\t\t\t\tnstack.push(f + \"(\" + n1 + \")\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error(\"invalid Expression\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nstack.length > 1) {\n\t\t\t\tthrow new Error(\"invalid Expression (parity)\");\n\t\t\t}\n\t\t\treturn nstack[0];\n\t\t},\n\n\t\tvariables: function () {\n\t\t\tvar L = this.tokens.length;\n\t\t\tvar vars = [];\n\t\t\tfor (var i = 0; i < L; i++) {\n\t\t\t\tvar item = this.tokens[i];\n\t\t\t\tif (item.type_ === TVAR && (vars.indexOf(item.index_) == -1)) {\n\t\t\t\t\tvars.push(item.index_);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn vars;\n\t\t},\n\n\t\ttoJSFunction: function (param, variables) {\n\t\t\tvar f = new Function(param, \"with(Parser.values) { return \" + this.simplify(variables).toString(true) + \"; }\");\n\t\t\treturn f;\n\t\t}\n\t};\n\n\tfunction add(a, b) {\n\t\treturn Number(a) + Number(b);\n\t}\n\tfunction sub(a, b) {\n\t\treturn a - b;\n\t}\n\tfunction mul(a, b) {\n\t\treturn a * b;\n\t}\n\tfunction div(a, b) {\n\t\treturn a / b;\n\t}\n\tfunction mod(a, b) {\n\t\treturn a % b;\n\t}\n\tfunction concat(a, b) {\n\t\treturn \"\" + a + b;\n\t}\n\tfunction equal(a, b) {\n\t\treturn a == b;\n\t}\n\tfunction notEqual(a, b) {\n\t\treturn a != b;\n\t}\n\tfunction greaterThan(a, b) {\n\t\treturn a > b;\n\t}\n\tfunction lessThan(a, b) {\n\t\treturn a < b;\n\t}\n\tfunction greaterThanEqual(a, b) {\n\t\treturn a >= b;\n\t}\n\tfunction lessThanEqual(a, b) {\n\t\treturn a <= b;\n\t}\n\tfunction andOperator(a, b) {\n\t\treturn Boolean(a && b);\n\t}\n\tfunction orOperator(a, b) {\n\t\treturn Boolean(a || b);\n\t}\n\tfunction sinh(a) {\n\t\treturn Math.sinh ? Math.sinh(a) : ((Math.exp(a) - Math.exp(-a)) / 2);\n\t}\n\tfunction cosh(a) {\n\t\treturn Math.cosh ? Math.cosh(a) : ((Math.exp(a) + Math.exp(-a)) / 2);\n\t}\n\tfunction tanh(a) {\n\t\tif (Math.tanh) return Math.tanh(a);\n\t\tif(a === Infinity) return 1;\n\t\tif(a === -Infinity) return -1;\n\t\treturn (Math.exp(a) - Math.exp(-a)) / (Math.exp(a) + Math.exp(-a));\n\t}\n\tfunction asinh(a) {\n\t\tif (Math.asinh) return Math.asinh(a);\n\t\tif(a === -Infinity) return a;\n\t\treturn Math.log(a + Math.sqrt(a * a + 1));\n\t}\n\tfunction acosh(a) {\n\t\treturn Math.acosh ? Math.acosh(a) : Math.log(a + Math.sqrt(a * a - 1));\n\t}\n\tfunction atanh(a) {\n\t\treturn Math.atanh ? Math.atanh(a) : (Math.log((1+a)/(1-a)) / 2);\n\t}\n\tfunction log10(a) {\n\t      return Math.log(a) * Math.LOG10E;\n\t}\n\tfunction neg(a) {\n\t\treturn -a;\n\t}\n\tfunction trunc(a) {\n\t\tif(Math.trunc) return Math.trunc(a);\n\t\telse return a < 0 ? Math.ceil(a) : Math.floor(a);\n\t}\n\tfunction random(a) {\n\t\treturn Math.random() * (a || 1);\n\t}\n\tfunction fac(a) { //a!\n\t\ta = Math.floor(a);\n\t\tvar b = a;\n\t\twhile (a > 1) {\n\t\t\tb = b * (--a);\n\t\t}\n\t\treturn b;\n\t}\n\n\t// TODO: use hypot that doesn't overflow\n\tfunction hypot() {\n\t\tif(Math.hypot) return Math.hypot.apply(this, arguments);\n\t\tvar y = 0;\n\t\tvar length = arguments.length;\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tif (arguments[i] === Infinity || arguments[i] === -Infinity) {\n\t\t\t\treturn Infinity;\n\t\t\t}\n\t\t\ty += arguments[i] * arguments[i];\n\t\t}\n\t\treturn Math.sqrt(y);\n\t}\n\n\tfunction condition(cond, yep, nope) {\n\t\treturn cond ? yep : nope;\n\t}\n\n\tfunction append(a, b) {\n\t\tif (Object.prototype.toString.call(a) != \"[object Array]\") {\n\t\t\treturn [a, b];\n\t\t}\n\t\ta = a.slice();\n\t\ta.push(b);\n\t\treturn a;\n\t}\n\n\tfunction Parser() {\n\t\tthis.success = false;\n\t\tthis.errormsg = \"\";\n\t\tthis.expression = \"\";\n\n\t\tthis.pos = 0;\n\n\t\tthis.tokennumber = 0;\n\t\tthis.tokenprio = 0;\n\t\tthis.tokenindex = 0;\n\t\tthis.tmpprio = 0;\n\n\t\tthis.ops1 = {\n\t\t\t\"sin\": Math.sin,\n\t\t\t\"cos\": Math.cos,\n\t\t\t\"tan\": Math.tan,\n\t\t\t\"asin\": Math.asin,\n\t\t\t\"acos\": Math.acos,\n\t\t\t\"atan\": Math.atan,\n\t\t\t\"sinh\": sinh,\n\t\t\t\"cosh\": cosh,\n\t\t\t\"tanh\": tanh,\n\t\t\t\"asinh\": asinh,\n\t\t\t\"acosh\": acosh,\n\t\t\t\"atanh\": atanh,\n\t\t\t\"sqrt\": Math.sqrt,\n\t\t\t\"log\": Math.log,\n\t\t\t\"lg\" : log10,\n\t\t\t\"log10\" : log10,\n\t\t\t\"abs\": Math.abs,\n\t\t\t\"ceil\": Math.ceil,\n\t\t\t\"floor\": Math.floor,\n\t\t\t\"round\": Math.round,\n\t\t\t\"trunc\": trunc,\n\t\t\t\"-\": neg,\n\t\t\t\"exp\": Math.exp\n\t\t};\n\n\t\tthis.ops2 = {\n\t\t\t\"+\": add,\n\t\t\t\"-\": sub,\n\t\t\t\"*\": mul,\n\t\t\t\"/\": div,\n\t\t\t\"%\": mod,\n\t\t\t\"^\": Math.pow,\n\t\t\t\",\": append,\n\t\t\t\"||\": concat,\n\t\t\t\"==\": equal,\n\t\t\t\"!=\": notEqual,\n\t\t\t\">\": greaterThan,\n\t\t\t\"<\": lessThan,\n\t\t\t\">=\": greaterThanEqual,\n\t\t\t\"<=\": lessThanEqual,\n\t\t\t\"and\": andOperator,\n\t\t\t\"or\": orOperator\n\t\t};\n\n\t\tthis.functions = {\n\t\t\t\"random\": random,\n\t\t\t\"fac\": fac,\n\t\t\t\"min\": Math.min,\n\t\t\t\"max\": Math.max,\n\t\t\t\"hypot\": hypot,\n\t\t\t\"pyt\": hypot, // backward compat\n\t\t\t\"pow\": Math.pow,\n\t\t\t\"atan2\": Math.atan2,\n\t\t\t\"if\": condition\n\t\t};\n\n\t\tthis.consts = {\n\t\t\t\"E\": Math.E,\n\t\t\t\"PI\": Math.PI\n\t\t};\n\t}\n\n\tParser.parse = function (expr) {\n\t\treturn new Parser().parse(expr);\n\t};\n\n\tParser.evaluate = function (expr, variables) {\n\t\treturn Parser.parse(expr).evaluate(variables);\n\t};\n\n\tParser.Expression = Expression;\n\n\tParser.values = {\n\t\tsin: Math.sin,\n\t\tcos: Math.cos,\n\t\ttan: Math.tan,\n\t\tasin: Math.asin,\n\t\tacos: Math.acos,\n\t\tatan: Math.atan,\n\t\tsinh: sinh,\n\t\tcosh: cosh,\n\t\ttanh: tanh,\n\t\tasinh: asinh,\n\t\tacosh: acosh,\n\t\tatanh: atanh,\n\t\tsqrt: Math.sqrt,\n\t\tlog: Math.log,\n\t\tlg: log10,\n\t\tlog10: log10,\n\t\tabs: Math.abs,\n\t\tceil: Math.ceil,\n\t\tfloor: Math.floor,\n\t\tround: Math.round,\n\t\ttrunc: trunc,\n\t\trandom: random,\n\t\tfac: fac,\n\t\texp: Math.exp,\n\t\tmin: Math.min,\n\t\tmax: Math.max,\n\t\thypot: hypot,\n\t\tpyt: hypot, // backward compat\n\t\tpow: Math.pow,\n\t\tatan2: Math.atan2,\n\t\t\"if\": condition,\n\t\tE: Math.E,\n\t\tPI: Math.PI\n\t};\n\n\tvar PRIMARY      = 1 << 0;\n\tvar OPERATOR     = 1 << 1;\n\tvar FUNCTION     = 1 << 2;\n\tvar LPAREN       = 1 << 3;\n\tvar RPAREN       = 1 << 4;\n\tvar COMMA        = 1 << 5;\n\tvar SIGN         = 1 << 6;\n\tvar CALL         = 1 << 7;\n\tvar NULLARY_CALL = 1 << 8;\n\n\tParser.prototype = {\n\t\tparse: function (expr) {\n\t\t\tthis.errormsg = \"\";\n\t\t\tthis.success = true;\n\t\t\tvar operstack = [];\n\t\t\tvar tokenstack = [];\n\t\t\tthis.tmpprio = 0;\n\t\t\tvar expected = (PRIMARY | LPAREN | FUNCTION | SIGN);\n\t\t\tvar noperators = 0;\n\t\t\tthis.expression = expr;\n\t\t\tthis.pos = 0;\n\n\t\t\twhile (this.pos < this.expression.length) {\n\t\t\t\tif (this.isOperator()) {\n\t\t\t\t\tif (this.isSign() && (expected & SIGN)) {\n\t\t\t\t\t\tif (this.isNegativeSign()) {\n\t\t\t\t\t\t\tthis.tokenprio = 2;\n\t\t\t\t\t\t\tthis.tokenindex = \"-\";\n\t\t\t\t\t\t\tnoperators++;\n\t\t\t\t\t\t\tthis.addfunc(tokenstack, operstack, TOP1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\texpected = (PRIMARY | LPAREN | FUNCTION | SIGN);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.isComment()) {\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ((expected & OPERATOR) === 0) {\n\t\t\t\t\t\t\tthis.error_parsing(this.pos, \"unexpected operator\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnoperators += 2;\n\t\t\t\t\t\tthis.addfunc(tokenstack, operstack, TOP2);\n\t\t\t\t\t\texpected = (PRIMARY | LPAREN | FUNCTION | SIGN);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.isNumber()) {\n\t\t\t\t\tif ((expected & PRIMARY) === 0) {\n\t\t\t\t\t\tthis.error_parsing(this.pos, \"unexpected number\");\n\t\t\t\t\t}\n\t\t\t\t\tvar token = new Token(TNUMBER, 0, 0, this.tokennumber);\n\t\t\t\t\ttokenstack.push(token);\n\n\t\t\t\t\texpected = (OPERATOR | RPAREN | COMMA);\n\t\t\t\t}\n\t\t\t\telse if (this.isString()) {\n\t\t\t\t\tif ((expected & PRIMARY) === 0) {\n\t\t\t\t\t\tthis.error_parsing(this.pos, \"unexpected string\");\n\t\t\t\t\t}\n\t\t\t\t\tvar token = new Token(TNUMBER, 0, 0, this.tokennumber);\n\t\t\t\t\ttokenstack.push(token);\n\n\t\t\t\t\texpected = (OPERATOR | RPAREN | COMMA);\n\t\t\t\t}\n\t\t\t\telse if (this.isLeftParenth()) {\n\t\t\t\t\tif ((expected & LPAREN) === 0) {\n\t\t\t\t\t\tthis.error_parsing(this.pos, \"unexpected \\\"(\\\"\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (expected & CALL) {\n\t\t\t\t\t\tnoperators += 2;\n\t\t\t\t\t\tthis.tokenprio = -2;\n\t\t\t\t\t\tthis.tokenindex = -1;\n\t\t\t\t\t\tthis.addfunc(tokenstack, operstack, TFUNCALL);\n\t\t\t\t\t}\n\n\t\t\t\t\texpected = (PRIMARY | LPAREN | FUNCTION | SIGN | NULLARY_CALL);\n\t\t\t\t}\n\t\t\t\telse if (this.isRightParenth()) {\n\t\t\t\t    if (expected & NULLARY_CALL) {\n\t\t\t\t\t\tvar token = new Token(TNUMBER, 0, 0, []);\n\t\t\t\t\t\ttokenstack.push(token);\n\t\t\t\t\t}\n\t\t\t\t\telse if ((expected & RPAREN) === 0) {\n\t\t\t\t\t\tthis.error_parsing(this.pos, \"unexpected \\\")\\\"\");\n\t\t\t\t\t}\n\n\t\t\t\t\texpected = (OPERATOR | RPAREN | COMMA | LPAREN | CALL);\n\t\t\t\t}\n\t\t\t\telse if (this.isComma()) {\n\t\t\t\t\tif ((expected & COMMA) === 0) {\n\t\t\t\t\t\tthis.error_parsing(this.pos, \"unexpected \\\",\\\"\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.addfunc(tokenstack, operstack, TOP2);\n\t\t\t\t\tnoperators += 2;\n\t\t\t\t\texpected = (PRIMARY | LPAREN | FUNCTION | SIGN);\n\t\t\t\t}\n\t\t\t\telse if (this.isConst()) {\n\t\t\t\t\tif ((expected & PRIMARY) === 0) {\n\t\t\t\t\t\tthis.error_parsing(this.pos, \"unexpected constant\");\n\t\t\t\t\t}\n\t\t\t\t\tvar consttoken = new Token(TNUMBER, 0, 0, this.tokennumber);\n\t\t\t\t\ttokenstack.push(consttoken);\n\t\t\t\t\texpected = (OPERATOR | RPAREN | COMMA);\n\t\t\t\t}\n\t\t\t\telse if (this.isOp2()) {\n\t\t\t\t\tif ((expected & FUNCTION) === 0) {\n\t\t\t\t\t\tthis.error_parsing(this.pos, \"unexpected function\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.addfunc(tokenstack, operstack, TOP2);\n\t\t\t\t\tnoperators += 2;\n\t\t\t\t\texpected = (LPAREN);\n\t\t\t\t}\n\t\t\t\telse if (this.isOp1()) {\n\t\t\t\t\tif ((expected & FUNCTION) === 0) {\n\t\t\t\t\t\tthis.error_parsing(this.pos, \"unexpected function\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.addfunc(tokenstack, operstack, TOP1);\n\t\t\t\t\tnoperators++;\n\t\t\t\t\texpected = (LPAREN);\n\t\t\t\t}\n\t\t\t\telse if (this.isVar()) {\n\t\t\t\t\tif ((expected & PRIMARY) === 0) {\n\t\t\t\t\t\tthis.error_parsing(this.pos, \"unexpected variable\");\n\t\t\t\t\t}\n\t\t\t\t\tvar vartoken = new Token(TVAR, this.tokenindex, 0, 0);\n\t\t\t\t\ttokenstack.push(vartoken);\n\n\t\t\t\t\texpected = (OPERATOR | RPAREN | COMMA | LPAREN | CALL);\n\t\t\t\t}\n\t\t\t\telse if (this.isWhite()) {\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.errormsg === \"\") {\n\t\t\t\t\t\tthis.error_parsing(this.pos, \"unknown character\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.error_parsing(this.pos, this.errormsg);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.tmpprio < 0 || this.tmpprio >= 10) {\n\t\t\t\tthis.error_parsing(this.pos, \"unmatched \\\"()\\\"\");\n\t\t\t}\n\t\t\twhile (operstack.length > 0) {\n\t\t\t\tvar tmp = operstack.pop();\n\t\t\t\ttokenstack.push(tmp);\n\t\t\t}\n\t\t\tif (noperators + 1 !== tokenstack.length) {\n\t\t\t\t//print(noperators + 1);\n\t\t\t\t//print(tokenstack);\n\t\t\t\tthis.error_parsing(this.pos, \"parity\");\n\t\t\t}\n\n\t\t\treturn new Expression(tokenstack, object(this.ops1), object(this.ops2), object(this.functions));\n\t\t},\n\n\t\tevaluate: function (expr, variables) {\n\t\t\treturn this.parse(expr).evaluate(variables);\n\t\t},\n\n\t\terror_parsing: function (column, msg) {\n\t\t\tthis.success = false;\n\t\t\tthis.errormsg = \"parse error [column \" + (column) + \"]: \" + msg;\n\t\t\tthis.column = column;\n\t\t\tthrow new Error(this.errormsg);\n\t\t},\n\n//\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\\n\n\t\taddfunc: function (tokenstack, operstack, type_) {\n\t\t\tvar operator = new Token(type_, this.tokenindex, this.tokenprio + this.tmpprio, 0);\n\t\t\twhile (operstack.length > 0) {\n\t\t\t\tif (operator.prio_ <= operstack[operstack.length - 1].prio_) {\n\t\t\t\t\ttokenstack.push(operstack.pop());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\toperstack.push(operator);\n\t\t},\n\n\t\tisNumber: function () {\n\t\t\tvar r = false;\n\t\t\tvar str = \"\";\n\t\t\twhile (this.pos < this.expression.length) {\n\t\t\t\tvar code = this.expression.charCodeAt(this.pos);\n\t\t\t\tif ((code >= 48 && code <= 57) || code === 46) {\n\t\t\t\t\tstr += this.expression.charAt(this.pos);\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tthis.tokennumber = parseFloat(str);\n\t\t\t\t\tr = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\n\t\t// Ported from the yajjl JSON parser at http://code.google.com/p/yajjl/\n\t\tunescape: function(v, pos) {\n\t\t\tvar buffer = [];\n\t\t\tvar escaping = false;\n\n\t\t\tfor (var i = 0; i < v.length; i++) {\n\t\t\t\tvar c = v.charAt(i);\n\n\t\t\t\tif (escaping) {\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase \"'\":\n\t\t\t\t\t\tbuffer.push(\"'\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '\\\\':\n\t\t\t\t\t\tbuffer.push('\\\\');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '/':\n\t\t\t\t\t\tbuffer.push('/');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tbuffer.push('\\b');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tbuffer.push('\\f');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tbuffer.push('\\n');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tbuffer.push('\\r');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tbuffer.push('\\t');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\t// interpret the following 4 characters as the hex of the unicode code point\n\t\t\t\t\t\tvar codePoint = parseInt(v.substring(i + 1, i + 5), 16);\n\t\t\t\t\t\tbuffer.push(String.fromCharCode(codePoint));\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow this.error_parsing(pos + i, \"Illegal escape sequence: '\\\\\" + c + \"'\");\n\t\t\t\t\t}\n\t\t\t\t\tescaping = false;\n\t\t\t\t} else {\n\t\t\t\t\tif (c == '\\\\') {\n\t\t\t\t\t\tescaping = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuffer.push(c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn buffer.join('');\n\t\t},\n\n\t\tisString: function () {\n\t\t\tvar r = false;\n\t\t\tvar str = \"\";\n\t\t\tvar startpos = this.pos;\n\t\t\tif (this.pos < this.expression.length && this.expression.charAt(this.pos) == \"'\") {\n\t\t\t\tthis.pos++;\n\t\t\t\twhile (this.pos < this.expression.length) {\n\t\t\t\t\tvar code = this.expression.charAt(this.pos);\n\t\t\t\t\tif (code != \"'\" || str.slice(-1) == \"\\\\\") {\n\t\t\t\t\t\tstr += this.expression.charAt(this.pos);\n\t\t\t\t\t\tthis.pos++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.pos++;\n\t\t\t\t\t\tthis.tokennumber = this.unescape(str, startpos);\n\t\t\t\t\t\tr = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\n\t\tisConst: function () {\n\t\t\tvar str;\n\t\t\tfor (var i in this.consts) {\n\t\t\t\tif (true) {\n\t\t\t\t\tvar L = i.length;\n\t\t\t\t\tstr = this.expression.substr(this.pos, L);\n\t\t\t\t\tif (i === str) {\n\t\t\t\t\t\tthis.tokennumber = this.consts[i];\n\t\t\t\t\t\tthis.pos += L;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisOperator: function () {\n\t\t\tvar code = this.expression.charCodeAt(this.pos);\n\t\t\tif (code === 43) { // +\n\t\t\t\tthis.tokenprio = 2;\n\t\t\t\tthis.tokenindex = \"+\";\n\t\t\t}\n\t\t\telse if (code === 45) { // -\n\t\t\t\tthis.tokenprio = 2;\n\t\t\t\tthis.tokenindex = \"-\";\n\t\t\t}\n\t\t\telse if (code === 62) { // >\n\t\t\t\tif (this.expression.charCodeAt(this.pos + 1) === 61) {\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tthis.tokenprio = 1;\n\t\t\t\t\tthis.tokenindex = \">=\";\n\t\t\t\t} else {\n\t\t\t\t\tthis.tokenprio = 1;\n\t\t\t\t\tthis.tokenindex = \">\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (code === 60) { // <\n\t\t\t\tif (this.expression.charCodeAt(this.pos + 1) === 61) {\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tthis.tokenprio = 1;\n\t\t\t\t\tthis.tokenindex = \"<=\";\n\t\t\t\t} else {\n\t\t\t\t\tthis.tokenprio = 1;\n\t\t\t\t\tthis.tokenindex = \"<\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (code === 124) { // |\n\t\t\t\tif (this.expression.charCodeAt(this.pos + 1) === 124) {\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tthis.tokenprio = 1;\n\t\t\t\t\tthis.tokenindex = \"||\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (code === 61) { // =\n\t\t\t\tif (this.expression.charCodeAt(this.pos + 1) === 61) {\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tthis.tokenprio = 1;\n\t\t\t\t\tthis.tokenindex = \"==\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (code === 33) { // !\n\t\t\t\tif (this.expression.charCodeAt(this.pos + 1) === 61) {\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tthis.tokenprio = 1;\n\t\t\t\t\tthis.tokenindex = \"!=\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (code === 97) { // a\n\t\t\t\tif (this.expression.charCodeAt(this.pos + 1) === 110 && this.expression.charCodeAt(this.pos + 2) === 100) { // n && d\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tthis.tokenprio = 0;\n\t\t\t\t\tthis.tokenindex = \"and\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (code === 111) { // o\n\t\t\t\tif (this.expression.charCodeAt(this.pos + 1) === 114) { // r\n\t\t\t\t\tthis.pos++;\n\t\t\t\t\tthis.tokenprio = 0;\n\t\t\t\t\tthis.tokenindex = \"or\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (code === 42 || code === 8729 || code === 8226) { // * or ∙ or •\n\t\t\t\tthis.tokenprio = 3;\n\t\t\t\tthis.tokenindex = \"*\";\n\t\t\t}\n\t\t\telse if (code === 47) { // /\n\t\t\t\tthis.tokenprio = 4;\n\t\t\t\tthis.tokenindex = \"/\";\n\t\t\t}\n\t\t\telse if (code === 37) { // %\n\t\t\t\tthis.tokenprio = 4;\n\t\t\t\tthis.tokenindex = \"%\";\n\t\t\t}\n\t\t\telse if (code === 94) { // ^\n\t\t\t\tthis.tokenprio = 5;\n\t\t\t\tthis.tokenindex = \"^\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.pos++;\n\t\t\treturn true;\n\t\t},\n\n\t\tisSign: function () {\n\t\t\tvar code = this.expression.charCodeAt(this.pos - 1);\n\t\t\tif (code === 45 || code === 43) { // -\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisPositiveSign: function () {\n\t\t\tvar code = this.expression.charCodeAt(this.pos - 1);\n\t\t\tif (code === 43) { // +\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisNegativeSign: function () {\n\t\t\tvar code = this.expression.charCodeAt(this.pos - 1);\n\t\t\tif (code === 45) { // -\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisLeftParenth: function () {\n\t\t\tvar code = this.expression.charCodeAt(this.pos);\n\t\t\tif (code === 40) { // (\n\t\t\t\tthis.pos++;\n\t\t\t\tthis.tmpprio += 10;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisRightParenth: function () {\n\t\t\tvar code = this.expression.charCodeAt(this.pos);\n\t\t\tif (code === 41) { // )\n\t\t\t\tthis.pos++;\n\t\t\t\tthis.tmpprio -= 10;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisComma: function () {\n\t\t\tvar code = this.expression.charCodeAt(this.pos);\n\t\t\tif (code === 44) { // ,\n\t\t\t\tthis.pos++;\n\t\t\t\tthis.tokenprio = -1;\n\t\t\t\tthis.tokenindex = \",\";\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisWhite: function () {\n\t\t\tvar code = this.expression.charCodeAt(this.pos);\n\t\t\tif (code === 32 || code === 9 || code === 10 || code === 13) {\n\t\t\t\tthis.pos++;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisOp1: function () {\n\t\t\tvar str = \"\";\n\t\t\tfor (var i = this.pos; i < this.expression.length; i++) {\n\t\t\t\tvar c = this.expression.charAt(i);\n\t\t\t\tif (c.toUpperCase() === c.toLowerCase()) {\n\t\t\t\t\tif (i === this.pos || (c != '_' && (c < '0' || c > '9'))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t}\n\t\t\tif (str.length > 0 && (str in this.ops1)) {\n\t\t\t\tthis.tokenindex = str;\n\t\t\t\tthis.tokenprio = 5;\n\t\t\t\tthis.pos += str.length;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisOp2: function () {\n\t\t\tvar str = \"\";\n\t\t\tfor (var i = this.pos; i < this.expression.length; i++) {\n\t\t\t\tvar c = this.expression.charAt(i);\n\t\t\t\tif (c.toUpperCase() === c.toLowerCase()) {\n\t\t\t\t\tif (i === this.pos || (c != '_' && (c < '0' || c > '9'))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t}\n\t\t\tif (str.length > 0 && (str in this.ops2)) {\n\t\t\t\tthis.tokenindex = str;\n\t\t\t\tthis.tokenprio = 5;\n\t\t\t\tthis.pos += str.length;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisVar: function () {\n\t\t\tvar str = \"\";\n\t\t\tfor (var i = this.pos; i < this.expression.length; i++) {\n\t\t\t\tvar c = this.expression.charAt(i);\n\t\t\t\tif (c.toUpperCase() === c.toLowerCase()) {\n\t\t\t\t\tif (i === this.pos || (c != '_' && c != '.' && (c < '0' || c > '9'))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t}\n\t\t\tif (str.length > 0) {\n\t\t\t\tthis.tokenindex = str;\n\t\t\t\tthis.tokenprio = 4;\n\t\t\t\tthis.pos += str.length;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisComment: function () {\n\t\t\tvar code = this.expression.charCodeAt(this.pos - 1);\n\t\t\tif (code === 47 && this.expression.charCodeAt(this.pos) === 42) {\n\t\t\t\tthis.pos = this.expression.indexOf(\"*/\", this.pos) + 2;\n\t\t\t\tif (this.pos === 1) {\n\t\t\t\t\tthis.pos = this.expression.length;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tscope.Parser = Parser;\n\treturn Parser\n})(typeof exports === 'undefined' ? {} : exports);\n"],"names":["Array","indexOf","prototype","obj","start","i","this","length","scope","object","o","F","Token","type_","index_","prio_","number_","toString","Expression","tokens","ops1","ops2","functions","escapable","meta","hasValue","values","index","part","parts","split","value","shift","getValue","add","a","b","Number","sub","mul","div","mod","concat","equal","notEqual","greaterThan","lessThan","greaterThanEqual","lessThanEqual","andOperator","Boolean","orOperator","sinh","Math","exp","cosh","tanh","Infinity","asinh","log","sqrt","acosh","atanh","log10","LOG10E","neg","trunc","ceil","floor","random","fac","hypot","apply","arguments","y","condition","cond","yep","nope","append","Object","call","slice","push","Parser","success","errormsg","expression","pos","tokennumber","tokenprio","tokenindex","tmpprio","sin","cos","tan","asin","acos","atan","abs","round","pow","min","max","atan2","consts","E","PI","simplify","n1","n2","item","nstack","newexpression","L","pop","f","substitute","variable","expr","parse","String","j","expritem","replitem","evaluate","Error","undefined","toJS","v","lastIndex","test","replace","c","charCodeAt","variables","vars","toJSFunction","param","Function","lg","pyt","operstack","tokenstack","expected","PRIMARY","noperators","isOperator","isSign","isNegativeSign","addfunc","isComment","error_parsing","isNumber","token","OPERATOR","isString","isLeftParenth","isRightParenth","isComma","isConst","consttoken","isOp2","isOp1","isVar","vartoken","isWhite","tmp","column","msg","operator","r","str","code","charAt","parseFloat","unescape","buffer","escaping","codePoint","parseInt","substring","fromCharCode","join","startpos","substr","isPositiveSign","toUpperCase","toLowerCase","exports"],"mappings":"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"}