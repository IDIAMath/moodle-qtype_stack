{"version":3,"file":"marchingcube.min.js","sources":["../src/marchingcube.js"],"sourcesContent":["/*\nCode from math3d-react\nhttps://github.com/ChristopherChudzicki/math3d-react/blob/master/client/src/utils/marchingCubes/index.js\n\n */\nimport {triangleTable} from \"./triangletable\";\n\nexport default function marchingCubes(\n    xMin, xMax, yMin, yMax, zMin, zMax,\n    func, c = 0, resolution = 128\n) {\n    const xStep = (xMax - xMin) / resolution\n    const yStep = (yMax - yMin) / resolution\n    const zStep = (zMax - zMin) / resolution\n    const finalTriangles = []\n    for (let x = xMin; x < xMax; x += xStep) {\n        for (let y = yMin; y < yMax; y += yStep) {\n            for (let z = zMin; z < zMax; z += zStep) {\n                // Same order as on http://paulbourke.net/geometry/polygonise/\n                const cube = new MarchingCube(x, y, z, xStep, yStep, zStep, func, c)\n                const cubeCase = triangleTable[cube.getIndex()]\n                for (let i = 0; i < cubeCase.length; i++) {\n                    const triangle = cubeCase[i]\n                    finalTriangles.push( [\n                        cube.getEdgePoint(triangle[0] ),\n                        cube.getEdgePoint(triangle[1] ),\n                        cube.getEdgePoint(triangle[2] )\n                    ] )\n                }\n            }\n        }\n    }\n    return finalTriangles\n}\n\nclass MarchingCube {\n\n    constructor(x, y, z, xStep, yStep, zStep, func, c) {\n        this.x = x\n        this.y = y\n        this.z = z\n        this.xStep = xStep\n        this.yStep = yStep\n        this.zStep = zStep\n        this.c = c\n        this.v1 = func(x, y, z)\n        this.v2 = func(x+xStep, y, z)\n        this.v4 = func(x+xStep, y, z+zStep)\n        this.v8 = func(x, y, z+zStep)\n        this.v16 = func(x, y+yStep, z)\n        this.v32 = func(x+xStep, y+yStep, z)\n        this.v64 = func(x+xStep, y+yStep, z+zStep)\n        this.v128 = func(x, y+yStep, z+zStep)\n        this.edgePoints = new Map()\n    }\n\n    /**\n     * getIndex\n     *\n     * Return the index into the 256 value lookup table\n     */\n    getIndex() {\n        let index = 0\n        const values = [\n            this.v1, this.v2, this.v4, this.v8,\n            this.v16, this.v32, this.v64, this.v128\n        ]\n        for (let i = 0; i < values.length; i++) {\n            const bit = 2**i\n            index += (values[i] > this.c) * bit\n        }\n        return index\n    }\n\n    getEdgePoint(edgeIndex) {\n        if (this.edgePoints.has(edgeIndex)) {\n            return this.edgePoints.get(edgeIndex)\n        }\n        let x, y, z\n        switch (edgeIndex) {\n\n            // See edge numbers here: http://paulbourke.net/geometry/polygonise/\n            case 0:\n                x = interp(this.x, this.x+this.xStep, this.v1, this.v2, this.c)\n                y = this.y\n                z = this.z\n                break\n            case 1:\n                x = this.x + this.xStep\n                y = this.y\n                z = interp(this.z, this.z+this.zStep, this.v2, this.v4, this.c)\n                break\n            case 2:\n                x = interp(this.x, this.x+this.xStep, this.v8, this.v4, this.c)\n                y = this.y\n                z = this.z + this.zStep\n                break\n            case 3:\n                x = this.x\n                y = this.y\n                z = interp(this.z, this.z+this.zStep, this.v1, this.v8, this.c)\n                break\n            case 4:\n                x = interp(this.x, this.x+this.xStep, this.v16, this.v32, this.c)\n                y = this.y + this.yStep\n                z = this.z\n                break\n            case 5:\n                x = this.x + this.xStep\n                y = this.y + this.yStep\n                z = interp(this.z, this.z+this.zStep, this.v32, this.v64, this.c)\n                break\n            case 6:\n                x = interp(this.x, this.x+this.xStep, this.v128, this.v64, this.c)\n                y = this.y + this.yStep\n                z = this.z + this.zStep\n                break\n            case 7:\n                x = this.x\n                y = this.y + this.yStep\n                z = interp(this.z, this.z+this.zStep, this.v16, this.v128, this.c)\n                break\n            case 8:\n                x = this.x\n                y = interp(this.y, this.y+this.yStep, this.v1, this.v16, this.c)\n                z = this.z\n                break\n            case 9:\n                x = this.x + this.xStep\n                y = interp(this.y, this.y+this.yStep, this.v2, this.v32, this.c)\n                z = this.z\n                break\n            case 10:\n                x = this.x + this.xStep\n                y = interp(this.y, this.y+this.yStep, this.v4, this.v64, this.c)\n                z = this.z + this.zStep\n                break\n            case 11:\n                x = this.x\n                y = interp(this.y, this.y+this.yStep, this.v8, this.v128, this.c)\n                z = this.z + this.zStep\n                break\n            default:\n                throw new Error('Edge index must be between 0 and 11')\n\n        }\n        this.edgePoints.set(edgeIndex, [x, y, z] )\n        return [x, y, z]\n    }\n\n}\n\nfunction interp(x1, x2, a, b, c) {\n    const t = (c - a) / (b - a)\n    return x1 * (1 - t) + x2 * t\n}"],"names":["xMin","xMax","yMin","yMax","zMin","zMax","func","c","resolution","xStep","yStep","zStep","finalTriangles","x","y","z","cube","MarchingCube","cubeCase","triangleTable","getIndex","i","length","triangle","push","getEdgePoint","v1","v2","v4","v8","v16","v32","v64","v128","edgePoints","Map","index","values","this","bit","edgeIndex","has","get","interp","Error","set","x1","x2","a","b","t"],"mappings":"ycAQIA,KAAMC,KAAMC,KAAMC,KAAMC,KAAMC,KAC9BC,cAAMC,yDAAI,EAAGC,kEAAa,IAEpBC,OAASR,KAAOD,MAAQQ,WACxBE,OAASP,KAAOD,MAAQM,WACxBG,OAASN,KAAOD,MAAQI,WACxBI,eAAiB,GACdC,EAAIb,KAAMa,EAAIZ,KAAMY,GAAKJ,UACzB,IAAIK,EAAIZ,KAAMY,EAAIX,KAAMW,GAAKJ,UACzB,IAAIK,EAAIX,KAAMW,EAAIV,KAAMU,GAAKJ,cAExBK,KAAO,IAAIC,aAAaJ,EAAGC,EAAGC,EAAGN,MAAOC,MAAOC,MAAOL,KAAMC,GAC5DW,SAAWC,6BAAcH,KAAKI,YAC3BC,EAAI,EAAGA,EAAIH,SAASI,OAAQD,IAAK,KAChCE,SAAWL,SAASG,GAC1BT,eAAeY,KAAM,CACjBR,KAAKS,aAAaF,SAAS,IAC3BP,KAAKS,aAAaF,SAAS,IAC3BP,KAAKS,aAAaF,SAAS,aAMxCX,oBAGLK,8CAEUJ,EAAGC,EAAGC,EAAGN,MAAOC,MAAOC,MAAOL,KAAMC,2JACvCM,EAAIA,OACJC,EAAIA,OACJC,EAAIA,OACJN,MAAQA,WACRC,MAAQA,WACRC,MAAQA,WACRJ,EAAIA,OACJmB,GAAKpB,KAAKO,EAAGC,EAAGC,QAChBY,GAAKrB,KAAKO,EAAEJ,MAAOK,EAAGC,QACtBa,GAAKtB,KAAKO,EAAEJ,MAAOK,EAAGC,EAAEJ,YACxBkB,GAAKvB,KAAKO,EAAGC,EAAGC,EAAEJ,YAClBmB,IAAMxB,KAAKO,EAAGC,EAAEJ,MAAOK,QACvBgB,IAAMzB,KAAKO,EAAEJ,MAAOK,EAAEJ,MAAOK,QAC7BiB,IAAM1B,KAAKO,EAAEJ,MAAOK,EAAEJ,MAAOK,EAAEJ,YAC/BsB,KAAO3B,KAAKO,EAAGC,EAAEJ,MAAOK,EAAEJ,YAC1BuB,WAAa,IAAIC,8GAQ1B,mBACQC,MAAQ,EACNC,OAAS,CACXC,KAAKZ,GAAIY,KAAKX,GAAIW,KAAKV,GAAIU,KAAKT,GAChCS,KAAKR,IAAKQ,KAAKP,IAAKO,KAAKN,IAAKM,KAAKL,MAE9BZ,EAAI,EAAGA,EAAIgB,OAAOf,OAAQD,IAAK,KAC9BkB,aAAM,EAAGlB,GACfe,QAAUC,OAAOhB,GAAKiB,KAAK/B,GAAKgC,WAE7BH,kCAGX,SAAaI,cACLF,KAAKJ,WAAWO,IAAID,kBACbF,KAAKJ,WAAWQ,IAAIF,eAE3B3B,EAAGC,EAAGC,SACFyB,gBAGC,EACD3B,EAAI8B,OAAOL,KAAKzB,EAAGyB,KAAKzB,EAAEyB,KAAK7B,MAAO6B,KAAKZ,GAAIY,KAAKX,GAAIW,KAAK/B,GAC7DO,EAAIwB,KAAKxB,EACTC,EAAIuB,KAAKvB,aAER,EACDF,EAAIyB,KAAKzB,EAAIyB,KAAK7B,MAClBK,EAAIwB,KAAKxB,EACTC,EAAI4B,OAAOL,KAAKvB,EAAGuB,KAAKvB,EAAEuB,KAAK3B,MAAO2B,KAAKX,GAAIW,KAAKV,GAAIU,KAAK/B,cAE5D,EACDM,EAAI8B,OAAOL,KAAKzB,EAAGyB,KAAKzB,EAAEyB,KAAK7B,MAAO6B,KAAKT,GAAIS,KAAKV,GAAIU,KAAK/B,GAC7DO,EAAIwB,KAAKxB,EACTC,EAAIuB,KAAKvB,EAAIuB,KAAK3B,iBAEjB,EACDE,EAAIyB,KAAKzB,EACTC,EAAIwB,KAAKxB,EACTC,EAAI4B,OAAOL,KAAKvB,EAAGuB,KAAKvB,EAAEuB,KAAK3B,MAAO2B,KAAKZ,GAAIY,KAAKT,GAAIS,KAAK/B,cAE5D,EACDM,EAAI8B,OAAOL,KAAKzB,EAAGyB,KAAKzB,EAAEyB,KAAK7B,MAAO6B,KAAKR,IAAKQ,KAAKP,IAAKO,KAAK/B,GAC/DO,EAAIwB,KAAKxB,EAAIwB,KAAK5B,MAClBK,EAAIuB,KAAKvB,aAER,EACDF,EAAIyB,KAAKzB,EAAIyB,KAAK7B,MAClBK,EAAIwB,KAAKxB,EAAIwB,KAAK5B,MAClBK,EAAI4B,OAAOL,KAAKvB,EAAGuB,KAAKvB,EAAEuB,KAAK3B,MAAO2B,KAAKP,IAAKO,KAAKN,IAAKM,KAAK/B,cAE9D,EACDM,EAAI8B,OAAOL,KAAKzB,EAAGyB,KAAKzB,EAAEyB,KAAK7B,MAAO6B,KAAKL,KAAMK,KAAKN,IAAKM,KAAK/B,GAChEO,EAAIwB,KAAKxB,EAAIwB,KAAK5B,MAClBK,EAAIuB,KAAKvB,EAAIuB,KAAK3B,iBAEjB,EACDE,EAAIyB,KAAKzB,EACTC,EAAIwB,KAAKxB,EAAIwB,KAAK5B,MAClBK,EAAI4B,OAAOL,KAAKvB,EAAGuB,KAAKvB,EAAEuB,KAAK3B,MAAO2B,KAAKR,IAAKQ,KAAKL,KAAMK,KAAK/B,cAE/D,EACDM,EAAIyB,KAAKzB,EACTC,EAAI6B,OAAOL,KAAKxB,EAAGwB,KAAKxB,EAAEwB,KAAK5B,MAAO4B,KAAKZ,GAAIY,KAAKR,IAAKQ,KAAK/B,GAC9DQ,EAAIuB,KAAKvB,aAER,EACDF,EAAIyB,KAAKzB,EAAIyB,KAAK7B,MAClBK,EAAI6B,OAAOL,KAAKxB,EAAGwB,KAAKxB,EAAEwB,KAAK5B,MAAO4B,KAAKX,GAAIW,KAAKP,IAAKO,KAAK/B,GAC9DQ,EAAIuB,KAAKvB,aAER,GACDF,EAAIyB,KAAKzB,EAAIyB,KAAK7B,MAClBK,EAAI6B,OAAOL,KAAKxB,EAAGwB,KAAKxB,EAAEwB,KAAK5B,MAAO4B,KAAKV,GAAIU,KAAKN,IAAKM,KAAK/B,GAC9DQ,EAAIuB,KAAKvB,EAAIuB,KAAK3B,iBAEjB,GACDE,EAAIyB,KAAKzB,EACTC,EAAI6B,OAAOL,KAAKxB,EAAGwB,KAAKxB,EAAEwB,KAAK5B,MAAO4B,KAAKT,GAAIS,KAAKL,KAAMK,KAAK/B,GAC/DQ,EAAIuB,KAAKvB,EAAIuB,KAAK3B,0BAGZ,IAAIiC,MAAM,mDAGnBV,WAAWW,IAAIL,UAAW,CAAC3B,EAAGC,EAAGC,IAC/B,CAACF,EAAGC,EAAGC,0MAKb4B,OAAOG,GAAIC,GAAIC,EAAGC,EAAG1C,OACpB2C,GAAK3C,EAAIyC,IAAMC,EAAID,UAClBF,IAAM,EAAII,GAAKH,GAAKG"}